import random

def print_board(board):
    print("\n    1   2   3")
    rows = ['A', 'B', 'C']
    for idx, row in enumerate(board):
        print(f"{rows[idx]} | {' | '.join(row)} |")
        print("  -------------")
    print("\n")

def check_win(board, symbol):
    for row in board:
        if all(cell == symbol for cell in row):
            return True
    for col in zip(*board):
        if all(cell == symbol for cell in col):
            return True
    if all(board[i][i] == symbol for i in range(3)) or \
       all(board[i][2 - i] == symbol for i in range(3)):
        return True
    return False

def is_draw(board):
    return all(cell != ' ' for row in board for cell in row)

def get_coordinates(move):
    mapping = {'A': 0, 'B': 1, 'C': 2}
    try:
        row = mapping[move[0].upper()]
        col = int(move[1]) - 1
        if row in range(3) and col in range(3):
            return row, col
    except:
        return None
    return None

def print_scoreboard(scoreboard, p1_name, p2_name):
    print("\n📊 Scoreboard:")
    print(f"{p1_name} ⚪ : {scoreboard['⚪']} wins")
    print(f"{p2_name} ❌ : {scoreboard['❌']} wins")
    print(f"Draws       : {scoreboard['Draw']}")
    print(f"Total Games : {scoreboard['Total']}\n")

def get_empty_cells(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == ' ']

def ai_move(board, ai_symbol, player_symbol):
    empty = get_empty_cells(board)

    # Win if possible
    for i, j in empty:
        board[i][j] = ai_symbol
        if check_win(board, ai_symbol):
            return i, j
        board[i][j] = ' '

    # Block opponent win
    for i, j in empty:
        board[i][j] = player_symbol
        if check_win(board, player_symbol):
            board[i][j] = ai_symbol
            return i, j
        board[i][j] = ' '

    # Else random move
    return random.choice(empty)

def tic_tac_toe():
    print("🎉 Welcome to Unique Tic Tac Toe with Scoreboard and AI 🎉")
    mode = input("Choose mode - Type '1' for Single Player or '2' for Two Player: ").strip()

    if mode == '1':
        player_name = input("Enter your name: ")
        ai_name = "AI Bot"
        players = [(player_name, '⚪'), (ai_name, '❌')]
        is_single = True
    else:
        p1_name = input("Enter Player 1 name: ")
        p2_name = input("Enter Player 2 name: ")
        players = [(p1_name, '⚪'), (p2_name, '❌')]
        is_single = False

    scoreboard = {'⚪': 0, '❌': 0, 'Draw': 0, 'Total': 0}

    while True:
        board = [[' ' for _ in range(3)] for _ in range(3)]
        random.shuffle(players)
        current_player = 0

        print(f"\n🎲 {players[0][0]} goes first with {players[0][1]}")

        while True:
            print_board(board)
            name, symbol = players[current_player]

            if is_single and name == "AI Bot":
                print("🤖 AI is thinking...")
                row, col = ai_move(board, symbol, players[1 - current_player][1])
            else:
                move = input(f"{name} ({symbol}), enter your move (e.g., A1, B3): ").upper()
                coords = get_coordinates(move)
                if not coords:
                    print("Invalid format! Use A1, B2, etc.")
                    continue
                row, col = coords
                if board[row][col] != ' ':
                    print("That cell is taken! Try again.")
                    continue

            board[row][col] = symbol

            if check_win(board, symbol):
                print_board(board)
                print(f"🏆 {name} wins this round with {symbol}! 🎉")
                scoreboard[symbol] += 1
                scoreboard['Total'] += 1
                break
            elif is_draw(board):
                print_board(board)
                print("🤝 It's a draw!")
                scoreboard['Draw'] += 1
                scoreboard['Total'] += 1
                break

            current_player = 1 - current_player

        print_scoreboard(scoreboard, players[0][0], players[1][0])
        again = input("🔁 Play another round? (y/n): ").lower()
        if again != 'y':
            print("\n👋 Thanks for playing! Final Scoreboard:")
            print_scoreboard(scoreboard, players[0][0], players[1][0])
            break

# Run it!
tic_tac_toe()
